name: Deploy Terraform Generator

on:
  push:
    branches:
      - main
    paths:
      - terraform-generator/**
      - .github/workflows/tf-gen-deploy.yaml

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  AWS_REGION: us-east-1
  TF_BACKEND_BUCKET_REGION: us-east-1
  PROJECT_PATH: ./terraform-generator
  S3_BUCKET_NAME: ai-endpoint-c85c1af5-20240226134657000700000001 #TODO:
  NODE_VERSION: 20
  ENV_PATH: ./terraform-generator/backend/server
  REGION: us-east-1
  BUCKET: tf-gen
  TABLE: tf-gen-backend

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: deploy

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Add .env file
        run: |
          cd ${{ env.ENV_PATH }}
          touch .env
          echo GEMINI_API=\"${{ secrets.GEMINI }}\" > .env
          ls -la
          cat .env

      - name: Setup Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install frontend deps
        run: |
          cd ${{ env.PROJECT_PATH }}/public
          npm install
          ls -la

      - name: Install backend deps and winglang
        run: |
          cd ${{ env.PROJECT_PATH }}/backend
          npm install
          npm install -g winglang

      - name: Compile and Deploy
        run: |
          cd ${{ env.PROJECT_PATH }}/backend
          wing compile -t tf-aws -t ./s3-backend.js main.w
          terraform -chdir=./target/main.tfaws init
          terraform -chdir=./target/main.tfaws apply --auto-approve

      # - name: Deploy Winglang App
      #   uses: winglang/wing-github-action/actions/deploy@main
      #   with:
      #     entry: "backend/main.w"
      #     target: "tf-aws"
      #     version: "latest"
      #     working-directory: ${{env.PROJECT_PATH}}
      #     backend: "s3"
      #   env:
      #     TF_BACKEND_BUCKET: ${{env.S3_BUCKET_NAME}}
      #     TF_BACKEND_BUCKET_REGION: ${{ env.TF_BACKEND_BUCKET_REGION }}
      #     # GEMINI_API: ${{ secrets.GEMINI }}
